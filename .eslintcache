[{"/home/cave/code/react/testapi/src/App.js":"1","/home/cave/code/react/testapi/src/index.js":"2","/home/cave/code/react/testapi/src/components/header/Header.js":"3","/home/cave/code/react/testapi/src/components/navbar/Navbar.js":"4","/home/cave/code/react/testapi/src/components/footer/Footer.js":"5","/home/cave/code/react/testapi/src/components/hero/Hero.js":"6"},{"size":355,"mtime":1611058043906,"results":"7","hashOfConfig":"8"},{"size":525,"mtime":1610990515566,"results":"9","hashOfConfig":"8"},{"size":2799,"mtime":1611035994504,"results":"10","hashOfConfig":"8"},{"size":944,"mtime":1611040929381,"results":"11","hashOfConfig":"8"},{"size":1399,"mtime":1611065679730,"results":"12","hashOfConfig":"8"},{"size":2087,"mtime":1611074070027,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b6rxxv",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/cave/code/react/testapi/src/App.js",[],"/home/cave/code/react/testapi/src/index.js",[],["28","29"],"/home/cave/code/react/testapi/src/components/header/Header.js",["30"],"import React, { useState } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  DropdownToggle,\n  DropdownMenu,\n  Button,\n  DropdownItem,\n  ButtonDropdown,\n} from \"reactstrap\";\nimport {\n  BoxArrowInRight,\n  PencilSquare,\n  ThreeDotsVertical,\n} from \"react-bootstrap-icons\";\nimport Logo from \"../../assets/logo.png\";\nimport styles from \"./Header.module.css\";\n\nconst Header = () => {\n  const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n  const toggleDropdown = () => setIsOpenDropdown(!isOpenDropdown);\n\n  return (\n    <div className={styles.top}>\n      <Navbar light expand=\"md\">\n        <NavbarBrand>\n          <div>\n            <span>\n              <img\n                alt=\"...\"\n                className=\"img-fluid rounded shadow responsive\"\n                src={Logo}\n                className={styles.logo}\n              ></img>\n            </span>\n\n            <span className={styles.logo_title_dev}>DEV</span>\n            <span className={styles.logo_title_talk}>Talk</span>\n            <span className={styles.logo_title_kenya}>kenya</span>\n          </div>\n        </NavbarBrand>\n\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"mr-auto\" navbar></Nav>\n\n          <NavItem>\n            <span className={styles.signup_btn}>\n              <PencilSquare color=\"white\" size={20} /> Sign up\n            </span>\n          </NavItem>\n          <NavItem>\n            <Button className={styles.signin_btn}>\n              <span>\n                <BoxArrowInRight color=\"white\" size={20} /> Sign In\n              </span>\n            </Button>\n          </NavItem>\n          <NavItem>\n            <ButtonDropdown\n              direction=\"down\"\n              isOpen={isOpenDropdown}\n              onClick={toggleDropdown}\n            >\n              <DropdownToggle className={styles.nav_btn}>\n                <ThreeDotsVertical />\n              </DropdownToggle>\n              <DropdownMenu className={styles.nav_dropdown}>\n                <DropdownItem className={styles.nav_dropdown_items}>\n                  About Us\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem className={styles.nav_dropdown_items}>\n                  Privacy Policy\n                </DropdownItem>\n                <DropdownItem divider />\n                <DropdownItem className={styles.nav_dropdown_items}>\n                  Other\n                </DropdownItem>\n                <DropdownItem divider />\n              </DropdownMenu>\n            </ButtonDropdown>\n          </NavItem>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n","/home/cave/code/react/testapi/src/components/navbar/Navbar.js",["31","32"],"/home/cave/code/react/testapi/src/components/footer/Footer.js",["33","34"],"/home/cave/code/react/testapi/src/components/hero/Hero.js",["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":40,"column":17,"nodeType":"43","endLine":40,"endColumn":40},{"ruleId":"44","severity":1,"message":"45","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"44","severity":1,"message":"48","line":2,"column":10,"nodeType":"46","messageId":"47","endLine":2,"endColumn":19},{"ruleId":"44","severity":1,"message":"49","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":12},{"ruleId":"50","severity":1,"message":"51","line":36,"column":13,"nodeType":"52","endLine":36,"endColumn":54},{"ruleId":"50","severity":1,"message":"51","line":28,"column":9,"nodeType":"52","endLine":28,"endColumn":57},{"ruleId":"50","severity":1,"message":"51","line":50,"column":11,"nodeType":"52","endLine":50,"endColumn":62},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","'Coat' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]